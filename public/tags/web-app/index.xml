<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web App on Chris Turner</title>
    <link>https://example.com/tags/web-app/</link>
    <description>Recent content in Web App on Chris Turner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Tue, 12 Dec 2017 11:30:40 +0000</lastBuildDate>
    
	<atom:link href="https://example.com/tags/web-app/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Web Application Directory Structure and WAR Files</title>
      <link>https://example.com/posts/web-application-directory-structure-and-war-files/</link>
      <pubDate>Tue, 12 Dec 2017 11:30:40 +0000</pubDate>
      
      <guid>https://example.com/posts/web-application-directory-structure-and-war-files/</guid>
      <description>Directory Structure and WAR Files Standard Java EE web applications are deployed as WAR files or “exploded” (unarchived) web application directories. All Java EE web application servers support WAR file application archives. Whether archived or exploded, the directory structure convention, as shown in Figure is the same.
 This structure contains classes and other application resources, the class files live in /WEB-INF/classes. The WEB-INF directory stores informational and instructional files that Java EE web application servers use to determine how to deploy and run the application.</description>
    </item>
    
    <item>
      <title>Basic Web Application Structure of JavaEE</title>
      <link>https://example.com/posts/basic-web-application-structure-of-javaee/</link>
      <pubDate>Tue, 12 Dec 2017 10:08:51 +0000</pubDate>
      
      <guid>https://example.com/posts/basic-web-application-structure-of-javaee/</guid>
      <description>Basic Web Application Structure A lot of components go into making a Java EE application.
 Application Code and Third Party Libraries it depends on
 Deployment Descriptor, which includes instructions for deploying and starting the application
 ClassLoders which is responsible for isolating your application form other web applications on the same server
 Finally the WAR and EAR files
  Servlets, Filters, Listeners, and JSPs  Servlets are a key component of any Java EE applications.</description>
    </item>
    
  </channel>
</rss>