<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on Rimon&#39;s Weblog</title>
    <link>https://rimonmostafiz.com/tags/spring/</link>
    <description>Recent content in Spring on Rimon&#39;s Weblog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Wed, 14 Mar 2018 10:36:12 +0000</lastBuildDate>
    
	<atom:link href="https://rimonmostafiz.com/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Inversion of Control and Dependency Injection</title>
      <link>https://rimonmostafiz.com/blog/inversion-of-control-and-dependency-injection/</link>
      <pubDate>Wed, 14 Mar 2018 10:36:12 +0000</pubDate>
      
      <guid>https://rimonmostafiz.com/blog/inversion-of-control-and-dependency-injection/</guid>
      <description>Inversion of control (IoC) In software engineering, inversion of control (IoC) is a design principle. It is used to invert different kinds of controls. More Specifically invert the control of your custom written program or objects of a program is transferred to a container or framework.
In traditional programming, our custom code that expresses the purpose of the program calls reusable libraries to take care of generic tasks, but with inversion of control, it is the framework that calls into the custom, or task-specific, code.</description>
    </item>
    
    <item>
      <title>a bit of spring: part one</title>
      <link>https://rimonmostafiz.com/blog/a-bit-of-spring-part-one/</link>
      <pubDate>Mon, 30 Oct 2017 09:19:54 +0000</pubDate>
      
      <guid>https://rimonmostafiz.com/blog/a-bit-of-spring-part-one/</guid>
      <description>Spring MVC Java Configuration Hi All, This _should_ be the first in a series of &amp;ldquo;Rimon learns Spring&amp;rdquo; type blog posts I plan on writing as I learn bits of Spring. I am just documenting my learnings, not advising others based on what I&amp;rsquo;ve learned.
Spring traditionally supports two types of configurations:
 XML based configuration
 Annotation-based configuration
  This post is about a bare minimum annotation-based configuration of spring MVC.</description>
    </item>
    
  </channel>
</rss>